buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'org.codehaus.groovy:groovy-backports-compat23:2.3.5'
    classpath 'com.dictanova.jcasgen.gradle:gradle-jcasgen-plugin:+'
    classpath 'com.tkruse.gradle:gradle-groovysh-plugin:1.0.5'
  }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'com.dictanova.jcasgen'
apply plugin: 'com.github.tkruse.groovysh'
apply plugin: 'groovy'

targetCompatibility = 1.7
sourceCompatibility = 1.7

mainClassName 		= 'cz.brmlab.yodaqa.YodaQA_Interactive'

ext.dkproVersion	= '1.7.0'

run {
  standardInput = System.in
  if (project.hasProperty('execArgs'))
    args(execArgs.split(' '))
  minHeapSize = "2048m"
  maxHeapSize = "3100m"
  systemProperties = System.getProperties()
}

sourceSets {
  main {
    jcasgen {
      srcDir 'src/main/resources/cz/brmlab/yodaqa/model/'
    }
  }
}

task(tsvgs, dependsOn: 'classes', type: JavaExec) {
  main = 'cz.brmlab.yodaqa.YodaQA_GS'
  if (project.hasProperty('execArgs'))
    args(execArgs.split(' '))
  else
    args = ['data/eval/curated-test.tsv', 'curated-test.tsv']
  minHeapSize = "2048m"
  maxHeapSize = "8000m"
  classpath = sourceSets.main.runtimeClasspath
  systemProperties = System.getProperties()
}

task(jsongs, dependsOn: 'classes', type: JavaExec) {
  main = 'cz.brmlab.yodaqa.YodaQA_JsonGS'
  if (project.hasProperty('execArgs'))
    args(execArgs.split(' '))
  else
    args = ['data/eval/output_train.json', 'json_results.tsv']
  minHeapSize = "2048m"
  maxHeapSize = "4500m"
  classpath = sourceSets.main.runtimeClasspath
  systemProperties = System.getProperties()
}

task(questionDump, dependsOn: 'classes', type: JavaExec) {
  main = 'cz.brmlab.yodaqa.QuestionDump'
  if (project.hasProperty('execArgs'))
    args(execArgs.split(' '))
  else
    args = ['data/eval/curated-test.tsv', 'QuestionDump.json']
  minHeapSize = "2048m"
  maxHeapSize = "3100m"
  classpath = sourceSets.main.runtimeClasspath
  systemProperties = System.getProperties()
}

task(machine, dependsOn: 'classes', type: JavaExec) {
  standardInput = System.in
  main = 'cz.brmlab.yodaqa.YodaQA_Machine'
  minHeapSize = "2048m"
  maxHeapSize = "3100m"
  classpath = sourceSets.main.runtimeClasspath
  systemProperties = System.getProperties()
}

task(web, dependsOn: 'classes', type: JavaExec) {
  main = 'cz.brmlab.yodaqa.YodaQA_Web'
  minHeapSize = "2048m"
  maxHeapSize = "3100m"
  classpath = sourceSets.main.runtimeClasspath
  systemProperties = System.getProperties()
}

task(biocrftrain, dependsOn: 'classes', type: JavaExec) {
  main = 'cz.brmlab.yodaqa.BIOTagger_CRFTrain'
  if (project.hasProperty('execArgs'))
    args(execArgs.split(' '))
  else
    args = ['data/ml/biocrf']
  minHeapSize = "2048m"
  maxHeapSize = "8000m"
  classpath = sourceSets.main.runtimeClasspath
  systemProperties = System.getProperties()
}

repositories {
  mavenCentral()
  maven { url 'http://zoidberg.ukp.informatik.tu-darmstadt.de/artifactory/repo/' }
  maven { url 'http://ailao.eu/maven/' }
  maven { url 'http://repo.spring.io/libs-release-remote/' }
}

dependencies {
  compile 'eu.ailao:gloveDict:1.0-stanford'
  compile 'org.apache.uima:uimaj-core:2.6.0'
  compile 'org.apache.uima:uimafit-core:2.1.0'
  compile "de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core-asl:$dkproVersion"
  compile "de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core.api.io-asl:$dkproVersion"
  compile "de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core.clearnlp-asl:$dkproVersion"
  compile "de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core.languagetool-asl:$dkproVersion"
  compile "de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core.maltparser-asl:$dkproVersion"
  compile "de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core.opennlp-asl:$dkproVersion"
  compile "de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core.tokit-asl:$dkproVersion"
  compile "de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core.berkeleyparser-gpl:$dkproVersion"
  compile "de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core.matetools-gpl:$dkproVersion"
  compile("de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core.stanfordnlp-gpl:$dkproVersion") {
    exclude group: "com.io7m.xom", module: "xom"  // this dependency breaks XMI serialization by using utf16, c.f. UIMA-3818
  }
  compile "de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core.api.parameter-asl:$dkproVersion"
//  compile 'org.apache.solr:solr-solrj:3.6.0'
//  compile 'org.apache.solr:solr-core:3.6.0'
  compile 'org.apache.solr:solr-solrj:4.3.0'
  compile 'org.apache.solr:solr-core:4.3.0'
  compile 'org.elasticsearch:elasticsearch:1.5.0'
  compile 'org.apache.httpcomponents:httpmime:4.2.1'
  compile 'org.apache.httpcomponents:httpclient:4.2.1'
  compile 'org.slf4j:slf4j-api:1.7.7'
  compile 'org.slf4j:slf4j-simple:1.7.7'
  compile 'org.apache.jena:apache-jena-libs:2.11.2'
  compile 'net.sf.extjwnl:extjwnl:1.8.0'
  compile 'net.sf.extjwnl:extjwnl-data-wn31:1.2'
  compile 'org.eclipse.jetty.orbit:javax.servlet:3.0.0.v201112011016'
  compile 'com.sparkjava:spark-core:1.1.1'
  compile 'com.google.code.gson:gson:2.3.1'
  compile 'org.cleartk:cleartk-ml:2.0.0'
  compile 'org.cleartk:cleartk-ml-crfsuite:2.0.0'
  compile 'com.google.guava:guava:18.0'
  compile 'com.github.jcrfsuite:jcrfsuite:0.5'
  compile 'org.codehaus.groovy:groovy-all:2.3.10'
  compile 'org.jblas:jblas:1.2.3'
  compile 'org.xerial:sqlite-jdbc:3.8.10.1'
  testCompile 'junit:junit:[4,)'
}

test {
testLogging {

events 'started', 'passed'
}
}
