<?xml version="1.0" encoding="UTF-8" ?>
  <typeSystemDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <name>QuestionTypes</name>
    <description>QuestionCAS type system</description>
    <vendor>yodaqa</vendor>
    <version>1.0</version>
    <imports>
      <import name="desc.type.LexicalUnits"/>
    </imports>
    <types>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.QuestionClass</name>
        <description>Information about question class</description>
        <supertypeName>uima.cas.TOP</supertypeName>
        <features>
          <featureDescription>
            <name>questionClass</name>
            <description>Class of question; "ABBR", "DESC", "ENTY", "HUM", "LOC", "NUM"</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.QuestionInfo</name>
        <description>Meta-information on the asked question</description>
        <supertypeName>uima.cas.TOP</supertypeName>
        <features>
          <featureDescription>
            <name>source</name>
            <description>Data source identification</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>questionId</name>
            <description>ID of the question (specific to data source)</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>questionType</name>
            <description>Type of question; "factoid", "list" or something else...; of course, this may be empty</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>questionText</name>
            <description>Text of question; redundant to QuestionCAS sofa, but useful in the final pipeline stages</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>answerPattern</name>
            <description>PCRE matching a valid answer; of course, this may be empty if the answer is unknown beforehand</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>procBeginTime</name>
            <description>Time of processing start (as returned by System.currentTimeMillis()), for measuring answering speed</description>
            <rangeTypeName>uima.cas.Long</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>passE_scored</name>
            <description>PassExtract statistics: Number of scored passages</description>
            <rangeTypeName>uima.cas.Integer</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>passE_gsscored</name>
            <description>PassExtract statistics: Number of scored passages that match answerPattern</description>
            <rangeTypeName>uima.cas.Integer</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>passE_picked</name>
            <description>PassExtract statistics: Number of picked passages</description>
            <rangeTypeName>uima.cas.Integer</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>passE_gspicked</name>
            <description>PassExtract statistics: Number of picked passages that match answerPattern</description>
            <rangeTypeName>uima.cas.Integer</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>onlyArtificialConcepts</name>
            <description>Don't execute concept linking stage on the question; concepts already come pre-determined along with the question from the collection reader</description>
            <rangeTypeName>uima.cas.Boolean</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.SV</name>
        <description>Selective Verb</description>
        <supertypeName>uima.tcas.Annotation</supertypeName>
        <features>
          <featureDescription>
            <name>base</name>
            <description>The corresponding token.</description>
            <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.Focus</name>
        <description>Question Focus; e.g. in "What site did Lindbergh begin his flight from?", "site" is the focus.</description>
        <supertypeName>uima.tcas.Annotation</supertypeName>
        <features>
          <featureDescription>
            <name>base</name>
            <description>The corresponding token/constituent/dependency/NamedEntity/...</description>
            <rangeTypeName>uima.tcas.Annotation</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>token</name>
            <description>The corresponding token.</description>
            <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.Subject</name>
        <description>Question Subject; e.g. in "What site did Lindbergh begin his flight from?", "Lindbergh" is the subject.  It might be the sentence NSUBJ, but also e.g. the object as in "Who painted 'Sunflowers'?" - 'Sunflowers'.  Note that this is typically *not* a single token but a constituent, e.g. for "When is Fashion week in NYC?" it is "Fashion week", not "week".</description>
        <supertypeName>uima.tcas.Annotation</supertypeName>
        <features>
          <featureDescription>
            <name>base</name>
	    <description>The corresponding token/constituent/dependency/NamedEntity/...</description>
            <rangeTypeName>uima.tcas.Annotation</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>token</name>
            <description>The corresponding token.</description>
            <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>

      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.Clue</name>
        <description>Question Clue. A collection of clues is what supports search for answer-bearing passages. This is a base type that is never directly instantiated, though; subtypes representing various kinds of clues are.</description>
        <supertypeName>uima.tcas.Annotation</supertypeName>
        <features>
          <featureDescription>
            <name>base</name>
            <description>The corresponding token/constituent.</description>
            <rangeTypeName>uima.tcas.Annotation</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>weight</name>
            <description>The more specific, selective or reliable the clue is, the higher weight it should get. Baseline weight is 1.0.</description>
            <rangeTypeName>uima.cas.Double</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>label</name>
            <description>Text of the clue.  Mostly, this is the same as getCoveredText() output, but some clues may expand or contract abbreviations, or in case of synsets or redirects, the name of the concept may be different (e.g. Wikipedia page title; "spacecraft" is covered, but an additional clue for "spaceship" is generated).</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>isReliable</name>
            <description>Whether the clue label is reliable, i.e. can be used as a _required_ term during a search query.</description>
            <rangeTypeName>uima.cas.Boolean</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueToken</name>
        <description>Clue based on interesting-looking tokens (e.g. nouns). These are the weakest form of clues, just as circumstantial evidence.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.CluePhrase</name>
        <description>Clue based on interesting-looking sub-phrases (e.g. noun constituents). These are also very weak clues.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueSV</name>
        <description>Clue based on SV (selection verb). Helpful but not crucial (esp. not for document titles).</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueNE</name>
        <description>Clue based on NE (named entity). Basically a stronger variant of ClueToken/CluePhrase.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueLAT</name>
        <description>Clue based on the (nongeneralized) LAT word; this corresponds to the question focus, but transformed to a noun, etc. Often indicates the kind of the result, but may be too generic; e.g. "book", "person", "capital", "height", "time"...</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueSubject</name>
        <description>Clue based on the question subject. "When was Einstein born?" has SV "born", focus "when", but the subject is "Einstein". This is the most important clue, if it exists. When asking "What is the capital of Laos?", multiple subjects "capital", "Laos" and "capital of Laos" with different tweaks (weight, subclass) will be generated.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueSubjectNE</name>
        <description>Clue based on the question subject, indicating that it is a named entity (e.g. "Laos" in "What is the capital of Laos?").</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.ClueSubject</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueSubjectToken</name>
        <description>Clue based on the question subject, indicating that it is a single token (e.g. "capital" in "What is the capital of Laos?").</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.ClueSubject</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueSubjectPhrase</name>
        <description>Clue based on the question subject, indicating that it is a full phrase (e.g. "capital of Laos" in "What is the capital of Laos?").</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.ClueSubject</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueSubjectAux</name>
        <description>Clue based on the question subject's auxiliaries.  Sometimes, the subject is not a grammatical subject but its attachment; this then complements it, a less important clue.  "What is the name of Holmes' brother?" has subject "brother" and "name" remains a SubjectAux.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueConcept</name>
	<description>Clue representing a concept (identified by corresponding wikipedia title). This is born out of ClueNE or CluePhrase and linked to a set of Concept objects.carries information about the concept (page id and label - title).</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
        <features>
          <featureDescription>
            <name>concepts</name>
            <description>List of concepts that generate this concept clue. If we have multiple concepts like "Frozen (2003 film)" and "Frozen (2015 film)", we'll produce just a single concept clue "Frozen" from that.</description>
            <rangeTypeName>uima.cas.FSList</rangeTypeName>
            <elementType>cz.brmlab.yodaqa.model.Question.Concept</elementType>
          </featureDescription>
        </features>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueNgram</name>
        <description>Clue based on an arbitrary n-gram (sequence of n subsequent tokens).  We generate these only when we have a good reason to, e.g. this n-gram matches some well-known entity label.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ArtificialClue</name>
        <description>Clue not generated by yodaQA but added by user.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.ClueNE</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.Concept</name>
	<description>Concept is basically a Wikipedia article, labelled by its full title and the label somehow occurring in the question text.  This is a strong indicator of the question topic, which in turn helps choose appropriate information sources.</description>
        <supertypeName>uima.tcas.Annotation</supertypeName>
        <features>
          <featureDescription>
            <name>fullLabel</name>
            <description>Full title of the concept.  Compared to covered text, this might have traversed some Wikipedia redirects and disambiguations; most typically, the label has some extra stuff in parentheses.</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>cookedLabel</name>
            <description>Polished title of the concept.  Compared to fullLabel, this has any trailing parentheses stripped out; it can still be different from the covered text if the official name differs from the (synonymous) text mention. This is the label used to generate concept clues.</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>pageID</name>
            <description>The id of the wikipedia page (can be fed to solr as well as freebase or dbpedia).</description>
            <rangeTypeName>uima.cas.Integer</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>bySubject</name>
            <description>Whether this concept has subdued a ClueSubject.</description>
            <rangeTypeName>uima.cas.Boolean</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>byLAT</name>
            <description>Whether this concept has subdued a ClueLAT.</description>
            <rangeTypeName>uima.cas.Boolean</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>byNE</name>
            <description>Whether this concept has subdued a ClueNE.</description>
            <rangeTypeName>uima.cas.Boolean</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>byNgram</name>
            <description>Whether this concept has subdued a ClueNgram.</description>
            <rangeTypeName>uima.cas.Boolean</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>byFuzzyLookup</name>
            <description>Whether this concept was found in fuzzy label lookup.</description>
            <rangeTypeName>uima.cas.Boolean</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>byCWLookup</name>
            <description>Whether this concept was found in CrossWikis label lookup.</description>
            <rangeTypeName>uima.cas.Boolean</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>logPopularity</name>
            <description>The log(popularity) of the concept, where popularity is the number of concept links in DBpedia.</description>
            <rangeTypeName>uima.cas.Double</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>labelProbability</name>
            <description>Probability of the label generally expressing the concept (regardless of context; when from CrossWikis dataset)</description>
            <rangeTypeName>uima.cas.Double</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>editDistance</name>
            <description>Edit distance of the cookedlabel from the canonlabel (when from fuzzy lookup)</description>
            <rangeTypeName>uima.cas.Double</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>description</name>
            <description>A brief description of the particular concept (about one sentence).</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>relatedness</name>
            <description>Alignment of concept description and question representation using word embeddings.</description>
            <rangeTypeName>uima.cas.Double</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>score</name>
            <description>Concept score in [0,1], classifier-determined probability estimate of this concept being a correctly linked entity</description>
            <rangeTypeName>uima.cas.Double</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>sourceRr</name>
            <description>The reciprocial rank in a best-score-sorted list of originating clues.</description>
            <rangeTypeName>uima.cas.Double</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>labelRr</name>
            <description>The reciprocial rank in a score-sorted list of output labelled concepts.</description>
            <rangeTypeName>uima.cas.Double</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>
    </types>
  </typeSystemDescription>
