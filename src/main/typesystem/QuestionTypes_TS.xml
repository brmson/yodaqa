<?xml version="1.0" encoding="UTF-8" ?>
  <typeSystemDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <name>QuestionTypes</name>
    <description>QuestionCAS type system</description>
    <vendor>yodaqa</vendor>
    <version>1.0</version>
    <imports>
      <import name="desc.type.LexicalUnits"/>
    </imports>
    <types>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.QuestionInfo</name>
        <description>Meta-information on the asked question</description>
        <supertypeName>uima.cas.TOP</supertypeName>
        <features>
          <featureDescription>
            <name>source</name>
            <description>Data source identification</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>questionId</name>
            <description>ID of the question (specific to data source)</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>questionType</name>
            <description>Type of question; "factoid", "list" or something else...; of course, this may be empty</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>questionText</name>
            <description>Text of question; redundant to QuestionCAS sofa, but useful in the final pipeline stages</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>answerPattern</name>
            <description>PCRE matching a valid answer; of course, this may be empty if the answer is unknown beforehand</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>procBeginTime</name>
            <description>Time of processing start (as returned by System.currentTimeMillis()), for measuring answering speed</description>
            <rangeTypeName>uima.cas.Long</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.SV</name>
        <description>Selective Verb</description>
        <supertypeName>uima.tcas.Annotation</supertypeName>
        <features>
          <featureDescription>
            <name>base</name>
            <description>The corresponding token.</description>
            <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.Focus</name>
        <description>Question Focus</description>
        <supertypeName>uima.tcas.Annotation</supertypeName>
        <features>
          <featureDescription>
            <name>base</name>
            <description>The corresponding token/constituent/dependency/...</description>
            <rangeTypeName>uima.tcas.Annotation</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>token</name>
            <description>The corresponding token.</description>
            <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>

      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.Clue</name>
        <description>Question Clue. A collection of clues is what supports search for answer-bearing passages. This is a base type that is never directly instantiated, though; subtypes representing various kinds of clues are.</description>
        <supertypeName>uima.tcas.Annotation</supertypeName>
        <features>
          <featureDescription>
            <name>base</name>
            <description>The corresponding token/constituent.</description>
            <rangeTypeName>uima.tcas.Annotation</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>weight</name>
            <description>The more specific, selective or reliable the clue is, the higher weight it should get. Baseline weight is 1.0.</description>
            <rangeTypeName>uima.cas.Double</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>label</name>
            <description>Text of the clue.  Mostly, this is the same as getCoveredText() output, but some clues may expand or contract abbreviations, or in case of synsets or redirects, the name of the concept may be different (e.g. Wikipedia page title; "spacecraft" is covered, but an additional clue for "spaceship" is generated).</description>
            <rangeTypeName>uima.cas.String</rangeTypeName>
          </featureDescription>
          <featureDescription>
            <name>isReliable</name>
            <description>Whether the clue label is reliable, i.e. can be used as a _required_ term during a search query.</description>
            <rangeTypeName>uima.cas.Boolean</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueToken</name>
        <description>Clue based on interesting-looking tokens (e.g. nouns). These are the weakest form of clues, just as circumstantial evidence.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.CluePhrase</name>
        <description>Clue based on interesting-looking sub-phrases (e.g. noun constituents). These are also very weak clues.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueSV</name>
        <description>Clue based on SV (selection verb). Helpful but not crucial (esp. not for document titles).</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueNE</name>
        <description>Clue based on NE (named entity). Basically a stronger variant of ClueToken/CluePhrase.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueFocus</name>
        <description>Clue based on the focus word. Often indicates the kind of the result, but may be too generic; e.g. "book", "person", "capital", "tall", "when"...</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueSubject</name>
        <description>Clue based on the question subject. "When was Einstein born?" has SV "born", focus "when", but the subject is "Einstein". This is the most important clue, if it exists.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueSubjectAux</name>
        <description>Clue based on the question subject's auxiliaries.  Sometimes, the subject is not a grammatical subject but its attachment; this then complements it, a less important clue.  "What is the name of Holmes' brother?" has subject "brother" and "name" remains a SubjectAux.</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
      </typeDescription>
      <typeDescription>
        <name>cz.brmlab.yodaqa.model.Question.ClueConcept</name>
	<description>Clue representing a concept (identified by corresponding wikipedia title). This is born out of ClueNE or CluePhrase and carries information about the concept (page id and label - title).</description>
        <supertypeName>cz.brmlab.yodaqa.model.Question.Clue</supertypeName>
        <features>
          <featureDescription>
            <name>pageID</name>
            <description>The id of the wikipedia page (can be fed to solr).</description>
            <rangeTypeName>uima.cas.Integer</rangeTypeName>
          </featureDescription>
        </features>
      </typeDescription>
    </types>
  </typeSystemDescription>
